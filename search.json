[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Function to calculate weekly returns indexed to start of year",
    "section": "",
    "text": "#| echo: false #| warning: false #| message: false # Load necessary libraries library(quantmod) library(dplyr) library(lubridate) library(plotly)\n\nFunction to calculate weekly returns indexed to start of year\ncalculate_weekly_returns &lt;- function(symbol, start_date, end_date) { data &lt;- getSymbols(symbol, from = start_date, to = end_date, src = “yahoo”, auto.assign = FALSE) prices &lt;- Ad(data)\ndf &lt;- data.frame(date = index(prices), price = as.numeric(prices)) df &lt;- df %&gt;% mutate(year = year(date), week = week(date)) %&gt;% group_by(year, week) %&gt;% summarise(date = last(date), price = last(price), .groups = ‘drop’) %&gt;% arrange(date)\ndf &lt;- df %&gt;% group_by(year) %&gt;% mutate(pct_change = (price / first(price) - 1) * 100) %&gt;% filter(week &lt;= 52) %&gt;% ungroup()\nreturn(df) }\n\n\nSet date range\nend_date &lt;- Sys.Date() start_date &lt;- as.Date(“2008-01-01”) start_year &lt;- as.integer(format(start_date, “%Y”))\n\n\nCalculate weekly returns for NASDAQ - MAKE SURE THIS IS EXECUTED\nnasdaq_returns &lt;- calculate_weekly_returns(“^IXIC”, start_date, end_date)\n\n\nSplit data into dataframes\ndf_historical &lt;- nasdaq_returns %&gt;% filter(year &gt;= start_year & year &lt;= 2024) df_2025 &lt;- nasdaq_returns %&gt;% filter(year == 2025) df_avg_historical &lt;- df_historical %&gt;% group_by(week) %&gt;% summarise(avg_pct_change = mean(pct_change, na.rm = TRUE))\n\n\nCreate the plot\np &lt;- plot_ly()\n\n\nAdd traces for historical data\np &lt;- add_trace(p, x = ~week, y = ~pct_change, data = df_historical, type = ‘scatter’, mode = ‘lines’, split = ~year, line = list(color = ‘grey’, width = 1), opacity = 0.3, hoverinfo = “text”, text = ~paste(“Year:”, year, “Week:”, week, “Change:”, round(pct_change, 2), “%”), showlegend = FALSE)\n\n\nAdd a custom trace for the historical legend entry\np &lt;- add_trace(p, x = c(1), y = c(NA), type = ‘scatter’, mode = ‘lines’, line = list(color = ‘grey’, width = 1), opacity = 0.3, name = ’‘, hoverinfo = ’none’)\n\n\nAdd trace for 2025\nif(nrow(df_2025) &gt; 0) { p &lt;- add_trace(p, x = ~week, y = ~pct_change, data = df_2025, type = ‘scatter’, mode = ‘lines’, line = list(color = ‘#336699’, width = 2), name = ‘2025’, hoverinfo = “text”, text = ~paste(“Year: 2025Week:”, week, “Change:”, round(pct_change, 2), “%”)) }\n\n\nAdd trace for average of historical data\np &lt;- add_trace(p, x = ~week, y = ~avg_pct_change, data = df_avg_historical, type = ‘scatter’, mode = ‘lines’, opacity = 1, line = list(color = ‘darkred’, width = 2, dash = ‘dot’), name = paste0(“Average (”,start_year,“-2024)”), hoverinfo = “text”, text = ~paste0(“Year: Average (”,start_year,“-2024)Week:”, week, “Change:”, round(avg_pct_change, 2), “%”))\n\n\nUpdate layout\np &lt;- p %&gt;% layout( xaxis = list( title = “Week”, range = c(1, 52), showgrid = FALSE, tickmode = “array”, tickvals = c(1, 10, 20, 30, 40, 50), ticktext = c(“1”, “10”, “20”, “30”, “40”, “50”) ), yaxis = list(title = “% Change”), showlegend = TRUE, legend = list(orientation = “h”, y = 1.1), hovermode = “closest” ) %&gt;% config( displayModeBar = FALSE )\n\n\nAdd the highlight effect\np &lt;- p %&gt;% highlight( on = “plotly_hover”, off = “plotly_unhover”, selected = list(line = list(color = “black”, width = 3)), opacityDim = 0.2 )\n\n\nDisplay the plot\np"
  }
]